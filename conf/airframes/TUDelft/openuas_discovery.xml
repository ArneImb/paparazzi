<!DOCTYPE airframe SYSTEM "../airframe.dtd">
<!-- ST Model Discovery (http://www.sheng-teng.com/)
     TWOG1  (http://paparazzi.enac.fr/wiki/index.php/)
     With modified power routing by a cut PCB trace
     * Tilted Infrared sensor for X,Y,Z
     * XBee XSC 900Mhz
     * uBlox LEA5H and Sarantel helix GPS antenna

     Near Future
     * Current sensor
     * Airspeed sensor via I2C
     * Height sensor via I2C
     * RPM sensor for brushless

     NOTES:
      no special things (for now)

READ this first
http://paparazzi.enac.fr/w/index.php?title=Theory_of_Operation
-->

<airframe name="Discovery">

  <firmware name="fixedwing">
    <target name="ap" 			board="twog_1.0"/>
    <target name="sim" 			board="pc"/>

    <define name="AGR_CLIMB"/>
    <define name="LOITER_TRIM"/>
<!-- to alter behaviour of aircraft if strong wind is detected -->
    <define name="STRONG_WIND"/>

    <define name="WIND_INFO"/>
    <define name="WIND_INFO_RET"/>

    <define name="ALT_KALMAN"/>
    <define name="USE_I2C0"/>

    <define name="DC_SHUTTER_SERVO" value="COMMAND_CLICKSHUTTER"/>

    <!-- Communication -->
    <subsystem name="telemetry" type="transparent">
      <configure name="MODEM_BAUD" value="B9600"/>
      <configure name="MODEM_PORT" value="UART1"/>
    </subsystem>

    <subsystem name="radio_control" type="ppm">
      <!-- for debugging PPM value the one below -->
      <!-- <define name="TELEMETRY_MODE_FBW" value="1"/> -->
    </subsystem>

    <!-- for setting values e.g. IR tuning via RC Tranmitter -->
    <subsystem name="settings" type="rc"/>
    <subsystem name="control"/>
    <subsystem name="ahrs" type="infrared"/>
    <subsystem name="gps" type="ublox"/>
    <subsystem name="navigation" type="extra"/>
    <subsystem name="navigation" type="bomb"/>
  </firmware>

<!--
  <firmware name="setup">
    <target name="tunnel"          board="twog_1.0" />
    <target name="usb_tunnel_0"    board="twog_1.0" />
    <target name="setup_actuators" board="twog_1.0" />
  </firmware>
-->

<!-- Define here to which CONNECTOR NUMBER the servo is connected to, on the autopilot cicuit board -->
  <servos>
    <!-- a CastleCreations ESC needs to be set with FIXED endpoints, then the just before start pw is 1250 and the pw 1860 for max throtte -->
    <servo name="MOTOR"         no="0" min="1100" neutral="1250" max="1860"/>
    <servo name="AILERON_LEFT"  no="2" min="1900" neutral="1440" max="1100"/>
    <servo name="AILERON_RIGHT" no="6" min="1900" neutral="1440" max="1100"/>
    <servo name="ELEVATOR"      no="3" min="1100" neutral="1500" max="1900"/>
    <servo name="RUDDER"        no="4" min="1100" neutral="1500" max="1900"/>
    <!-- hatch not sed yet in this airframe but defined for drop sim -->
    <servo name="HATCH"   	    no="7" min="1100" neutral="1110" max="1900"/>
    <servo name="SHUTTER"       no="1" min="1000" neutral="1500" max="2000"/>
  </servos>

<!-- commands section -->
  <commands>
    <axis name="THROTTLE" 	failsafe_value="0"/>
    <axis name="ROLL"     	failsafe_value="0"/>
    <axis name="PITCH"    	failsafe_value="0"/>
    <axis name="YAW"      	failsafe_value="2000"/>
    <axis name="HATCH"    	failsafe_value="-9599"/>
    <axis name="CLICKSHUTTER"    failsafe_value="0"/>
<!-- maybe set to open position so we can insert the payload -->
    <axis name="BRAKE"      failsafe_value="9600"/>	<!-- both ailerons up as butterfly brake ? -->

<!--
    <axis name="GAIN1"		failsafe_value="0"/>
    <axis name="CALIB"		failsafe_value="0"/>
-->
  </commands>

  <rc_commands>
    <set command="THROTTLE" value="@THROTTLE"/>
    <set command="ROLL"     value="@ROLL"/>
    <set command="PITCH"    value="@PITCH"/>
    <set command="YAW"      value="@YAW"/>
    <set command="BRAKE"    value="@FLAPS"/>
    <set command="HATCH"    value="@EXTRA1"/>
    <set command="CLICKSHUTTER"    value="@EXTRA1"/>
<!--
    <set command="GAIN1"    value="@GAIN1"/>
    <set command="CALIB"    value="@CALIB"/>
-->
  </rc_commands>
  <!--
  <auto_rc_commands>
To still be able to use rudder, which is needed with sidewind landing in auto1 stabilization mode only YAW
    <set command="YAW"      value="@YAW"/>
 -->
<!--For manual testing hatch triggering  <set command="HATCH"    value="@EXTRA1"/> -->

<!--
    <set command="GAIN1"    value="@GAIN1"/>
    <set command="CALIB"    value="@CALIB"/>

  </auto_rc_commands>
-->
<!--For mixed controlflaps -->
  <section name="SERVO_MIXER_GAINS">
    <define name="AILERON_NEUTRAL" value="0.3f"/>

    <define name="AILERON_RATE_UP" value="1.0f"/>
    <define name="AILERON_RATE_DOWN" value="0.5f"/>

    <define name="AILERON_RATE_UP_BRAKE" value="1.0f"/>
    <define name="AILERON_RATE_DOWN_BRAKE" value="1.0f"/>

    <define name="PITCH_GAIN" value="0.9f"/>

    <define name="BRAKE_AILEVON" value="-0.7f"/>
    <define name="BRAKE_PITCH" value="0.1f"/>
    <define name="MAX_BRAKE_RATE" value="130"/>

    <define name="RUDDER_OF_AILERON" value="0.3f"/>

    <define name="LIMIT(X,XL,XH)" value="(    ((X)>(XH))   ?    (XH)    :    ( ((X)>(XL)) ? (X) : (XL) )    )"/>

</section>

  <command_laws>
    <!-- Brake Rate Limiter -->
<!--
    <let var="brake_value_nofilt" value="LIMIT(-@BRAKE, 0, MAX_PPRZ)"/>
    <let var="test; \
  	      static int16_t _var_brake_value = 0; \
              _var_brake_value += LIMIT(_var_brake_value_nofilt - _var_brake_value,-MAX_BRAKE_RATE,MAX_BRAKE_RATE); \
              int verwaarloos_deze_warning_CDW" value="0"/>
-->
    <!-- Differential Aileron Depending on Brake Value -->
<!--
    <let var="aileron_up_rate" value="(AILERON_RATE_UP   * (MAX_PPRZ - $brake_value)) + (AILERON_RATE_UP_BRAKE   * $brake_value)"/>
    <let var="aileron_down_rate" value="(AILERON_RATE_DOWN * (MAX_PPRZ - $brake_value)) + (AILERON_RATE_DOWN_BRAKE * $brake_value)"/>
    <let var="aileron_up" value="(@ROLL  *  (((float)$aileron_up_rate) / ((float)MAX_PPRZ)))"/>
    <let var="aileron_down" value="(@ROLL  * (((float)$aileron_down_rate) / ((float)MAX_PPRZ)))"/>
    <let var="leftturn" value="(@ROLL >= 0? 1 : 0)"/>
    <let var="rightturn" value="(1 - $leftturn)"/>
    <set servo="AILERON_LEFT" value="($aileron_up * $leftturn) + ($aileron_down * $rightturn) - $brake_value*(BRAKE_AILEVON) - (MAX_PPRZ * AILERON_NEUTRAL)"/>
    <set servo="AILERON_RIGHT" value="($aileron_up * $rightturn) + ($aileron_down * $leftturn) + $brake_value*(BRAKE_AILEVON) + (MAX_PPRZ *AILERON_NEUTRAL)"/>
-->
<!-- temp before testing real break -->
    <set servo="AILERON_LEFT"  value="@ROLL"/>
    <set servo="AILERON_RIGHT" value="@ROLL"/>

    <set servo="MOTOR"         value="@THROTTLE"/>
    <set servo="ELEVATOR"      value="@PITCH"/>
    <!-- Pitch with Brake-Trim Function -->
<!--    <set servo="ELEVATOR" value="@PITCH * PITCH_GAIN - BRAKE_PITCH * $brake_value"/> -->
    <set servo="RUDDER"        value="@YAW + @ROLL * RUDDER_OF_AILERON"/>
    <set servo="HATCH"         value="@HATCH"/>
    <set servo="SHUTTER"       value="@CLICKSHUTTER"/>
  </command_laws>

<!-- Do not set MAX_ROLL, MAX_PITCH to small of a value, otherwise one can NOT control the plane very well manually -->
<!-- If you have dual rate swith it of with same swtch as mode switch thus auto1 means dualrate is switched off also -->
  <section name="AUTO1" prefix="AUTO1_">
    <define name="MAX_ROLL" value="0.95"/> <!-- radians -->
    <define name="MAX_PITCH" value="0.95"/> <!-- radians -->
<!-- Or use as below -->
<!--    <define name="MAX_ROLL" value="RadOfDeg(95)"/> -->
<!--    <define name="MAX_PITCH" value="RadOfDeg(95)"/> -->
  </section>

  <section name="INFRARED" prefix="IR_">
<!-- NEUTRAL value below set via caliberation with all sensors covert and intill set to 0 the read via telemetry data and in this case 515 etc filled in later and reuploaded -->
<!-- In this plane IR1 points to side to side, the latereal axis -->
<!-- In this plane IR2 points to front and back, the longitudinal axis -->

<!--Reminder: reads X if value=0 is uploaded in airframe -->
    <define name="ADC_IR1_NEUTRAL" value="512"/>
<!--Reminder: reads X if value=0 is uploaded in airframe -->
    <define name="ADC_IR2_NEUTRAL" value="512"/>
<!--Reminder: reads X if value=0 is uploaded in airframe -->
    <define name="ADC_TOP_NEUTRAL" value="512"/>

    <define name="CORRECTION_UP" value="1.0"/>
    <define name="CORRECTION_DOWN" value="1.0"/>
    <define name="CORRECTION_LEFT" value="1.0"/>
    <define name="CORRECTION_RIGHT" value="1.0"/>

<!-- =============== possible new values =========================  -->
<!--   <define name="DEFAULT_CONTRAST" value="200"/> -->
<!--   <define name="RAD_OF_IR_CONTRAST" value="0.75"/> -->
<!--   <linear name="RollOfIrs" arity="2" coeff1="0.7" coeff2="-0.7"/> -->
<!--   <linear name="PitchOfIrs" arity="2" coeff1="0.7" coeff2="0.7"/> -->
<!--   <linear name="TopOfIr" arity="1" coeff1="-1"/> -->
<!--   <define name="RAD_OF_IR_MAX_VALUE" value="0.0045"/> -->
<!--   <define name="RAD_OF_IR_MIN_VALUE" value="0.00075"/> -->
<!--  ============== possible new values end ===================== -->


<!-- The three axis must give similar values for similar air to ground contrasts. -->
<!-- If you e.g. have a different brand of IR piles for straight up n down sensors. -->

    <define name="LATERAL_CORRECTION" value="0.7"/> <!-- was in the past 360_LATERAL_CORRECTION -->
    <define name="LONGITUDINAL_CORRECTION" value="0.7"/> <!-- was in the past 360_LONGITUDINAL_CORRECTION -->
<!-- One can set the top down correction a little lower so leftrightfrontback is more accurate n faster -->
    <define name="VERTICAL_CORRECTION" value="1.0"/>  <!-- was in the past 360_VERTICAL_CORRECTION -->

<!-- ONLY enable the line below if the sensor is ALIGENED front to back, side to side. Thus not 45deg rotated, and Disable the TILTED LINE -->
<!--    <define name="HORIZ_SENSOR_ALIGNED" value="1"/> -->
<!-- ONLY enable the line below if the sensor is TILTED, and Disable the ALIGENED LINE -->
    <define name="HORIZ_SENSOR_TILTED" value="1"/>

<!-- Ground(=Hotter than sky) on right side of airframe as seen from back -->
<!-- The Hotter side must give a positive value maybe -->

<!-- In this plane IR1 points to front and side, the latereal AND longitudinal axis -->
    <define name="IR1_SIGN" value="-1"/>
<!-- In this plane IR2 points to front and side, the latereal AND longitudinal axis -->
    <define name="IR2_SIGN" value="1"/>
    <define name="TOP_SIGN" value="1"/>


    <define name="ROLL_NEUTRAL_DEFAULT" value="-4" unit="deg"/>
    <define name="PITCH_NEUTRAL_DEFAULT" value="3" unit="deg"/>
  </section>

  <section name="BAT">
<!-- If current-volts sensor is installed use line below-->
<!-- <define name="ADC_CHANNEL_CURRENT" value="ADC_3" /> -->
<!-- <define name="MilliAmpereOfAdc(adc)" value="(adc*88)"/> -->

<!-- <define name="ADC_CHANNEL_VOLTAGE" value="ADC_4" /> -->
<!-- The real multiplier is unknown we take 2 as test example -->
<!--  <define name="VoltageOfAdc(adc)" value ="(adc*2)"/>  -->

<!-- If NO current-volts sensor installed uncomment below -->
  <define name="MILLIAMP_AT_FULL_THROTTLE" value="17000" unit="mA"/>

<!--
    <define name="VOLTAGE_ADC_A" value="0.0177531"/>
    <define name="VOLTAGE_ADC_B" value="0.173626"/>
    <define name="VoltageOfAdc(adc)" value ="(VOLTAGE_ADC_A * adc + VOLTAGE_ADC_B)"/>
-->

    <define name="CATASTROPHIC_BAT_LEVEL" value="9.1" unit="V"/> <!-- 3S lipo 3.1*3=9.3 -->
    <define name="CRITIC_BAT_LEVEL" value="9.8" unit="V"/>
    <define name="LOW_BAT_LEVEL" value="10.5" unit="V"/>
    <define name="MAX_BAT_LEVEL" value="12.6" unit="V"/> <!-- 3S lipo 4.2*3=12.6 -->
  </section>

  <section name="MISC">
    <define name="MINIMUM_AIRSPEED" value="10.0" unit="m/s"/>
    <define name="NOMINAL_AIRSPEED" value="16.0" unit="m/s"/>
    <define name="MAXIMUM_AIRSPEED" value="23.0" unit="m/s"/>
    <define name="CARROT" value="5.0" unit="s"/>
    <define name="KILL_MODE_DISTANCE" value="(1.3*MAX_DIST_FROM_HOME)"/>
    <define name="CONTROL_RATE" value="60" unit="Hz"/>
    <define name="NO_XBEE_API_INIT" value="TRUE"/>

<!--UNLOCKED_HOME_MODE if set to TRUE means that HOME mode does not get stuck.
If not set before when you would enter home mode you had to flip a bit via the GCS to get out. -->
    <define name="UNLOCKED_HOME_MODE" value="TRUE"/>
<!-- RC_LOST_MODE means that if your RC Transmitter signal is not received anymore in the autopilot, e.g. you switch it off
     or  fly a long range mission you define the wanted mode behaviour here.
     If you do not define it, it defaults to flying to the flightplan HOME
    <define name="RC_LOST_MODE" value="PPRZ_MODE_AUTO2"/> -->

<!--
    <define name="CAM_PHI_MAX_DEG" value="45"/>
    <define name="VIDEO_SWITCH_PIN" value="20"/>
-->

    <define name="ALT_KALMAN_ENABLED" value="TRUE"/>
    <define name="TRIGGER_DELAY" value="1.0"/>
    <define name="DEFAULT_CIRCLE_RADIUS" value="50.0"/>
    <define name="MIN_CIRCLE_RADIUS" value="40.0"/>

<!-- The Glide definitions are used for calculating the touch down point during auto landing -->

    <define name="GLIDE_AIRSPEED" value="10."/>
    <define name="GLIDE_VSPEED" value="2." unit="m/s"/>
    <define name="GLIDE_PITCH" value="10." unit="deg"/>

  </section>
<!-- ******************* VERTICAL CONTROL ********************************** -->

  <section name="VERTICAL CONTROL" prefix="V_CTL_">
    <define name="POWER_CTL_BAT_NOMINAL" value="11.2" unit="volt"/>

<!-- outer loop proportional gain -->
    <define name="ALTITUDE_PGAIN" value="-0.04" unit="(m/s)/m"/>

<!-- outer loop saturation -->
    <define name="ALTITUDE_MAX_CLIMB" value="1.8" unit="m/s"/>

    <!-- auto throttle inner loop -->
   <define name="AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE" value="0.75" unit="%"/>
   <define name="AUTO_THROTTLE_MIN_CRUISE_THROTTLE" value="0.60" unit="%"/>
   <define name="AUTO_THROTTLE_MAX_CRUISE_THROTTLE" value="0.99" unit="%"/>
   <define name="AUTO_THROTTLE_LOITER_TRIM" value="1000" unit="pprz_t"/>
   <define name="AUTO_THROTTLE_DASH_TRIM" value="-2000" unit="pprz_t"/>
   <define name="AUTO_THROTTLE_CLIMB_THROTTLE_INCREMENT" value="0.09" unit="%/(m/s)"/>

   <define name="AUTO_THROTTLE_PGAIN" value="0.007" unit="%/(m/s)"/>
   <define name="AUTO_THROTTLE_IGAIN" value="0.02"/>
   <define name="AUTO_THROTTLE_DGAIN" value="0.0"/>
   <define name="AUTO_THROTTLE_PITCH_OF_VZ_PGAIN" value="0.08" unit="rad/(m/s)"/>
   <define name="THROTTLE_SLEW_LIMITER" value="0.8" unit="s"/>

<!-- NOT YET USED auto airspeed and altitude inner loop -->
<!--    <define name="AIRSPEED_ETS_OFFSET" value="1542"/> -->

<!-- NEVER set AUTO_AIRSPEED_SETPOINT lower than airframe stall speed -->

<!--
    <define name="AUTO_AIRSPEED_SETPOINT" value="11.5" unit="m/s"/>
    <define name="AUTO_AIRSPEED_PGAIN" value="0.1"/>
    <define name="AUTO_AIRSPEED_IGAIN" value="0.05"/>

    <define name="AUTO_AIRSPEED_PITCH_PGAIN" value="0" unit="degree/(m/s)"/>
    <define name="AUTO_AIRSPEED_THROTTLE_PGAIN" value="0" unit="%/(m/s)"/>
    <define name="AUTO_AIRSPEED_THROTTLE_IGAIN" value="0"/>
-->

<!-- investigate: if higher _AIRSPEED_SETPOINT then airframe tries to maintain a constand ground speed UNKNOWN -->

<!--
    <define name="AUTO_GROUNDSPEED_SETPOINT" value="9.0" unit="m/s"/>
    <define name="AUTO_GROUNDSPEED_PGAIN" value="0.75"/>
    <define name="AUTO_GROUNDSPEED_IGAIN" value="0.25"/>
-->

<!-- auto pitch inner loop -->
   <define name="AUTO_PITCH_PGAIN" value="0.052"/>
   <define name="AUTO_PITCH_IGAIN" value="0.065"/>
   <define name="AUTO_PITCH_MAX_PITCH" value="0.45"/>
   <define name="AUTO_PITCH_MIN_PITCH" value="-0.40"/>
   <!-- <define name="THROTTLE_SLEW" value="0.2"/> -->
  </section>

<!-- ******************* HORIZONTAL CONTROL ******************************** -->

  <section name="HORIZONTAL CONTROL" prefix="H_CTL_">

    <define name="COURSE_PGAIN" value="1.1"/>
<!--    <define name="COURSE_IGAIN" value="0.01"/> -->
    <define name="COURSE_DGAIN" value="0.1"/>
    <define name="COURSE_PRE_BANK_CORRECTION" value="0.4"/>

    <define name="ROLL_MAX_SETPOINT" value="0.90" unit="rad"/> <!-- Max Angles -->
    <define name="PITCH_MAX_SETPOINT" value="0.6" unit="rad"/>
    <define name="PITCH_MIN_SETPOINT" value="-0.5" unit="rad"/>

<!--    <define name="ROLL_PGAIN" value="7000."/> -->

<!-- maybe handy to avoid over corner with lots of wind and small airframe -->
 <!--  <define name="COURSE_SLEW_INCREMENT" value="RadOfDeg(4)"/> -->

   <define name="ROLL_ATTITUDE_GAIN" value="8000."/><!-- Roll Angle PD control -->
   <define name="ROLL_RATE_GAIN" value="1000"/>

<!-- ** Maximal roll angle change per 1/60 of second ** -->
    <define name="ROLL_SLEW" value="0.35"/>  <!-- was 0.05 -->

    <define name="AILERON_OF_THROTTLE" value="0.0"/>

    <define name="PITCH_PGAIN" value="9000."/>
    <define name="PITCH_DGAIN" value="2.2"/><!--   <d "1.02" was previous value -->

   <define name="ELEVATOR_OF_ROLL" value="1700"/>
<!-- Alternative way of adding some elevator when roll initiated -->
<!-- <define name="PITCH_OF_ROLL" value="RadOfDeg(0.1)"/> -->

  </section>

<!-- ******************************** PHOTOGRAMMETRY ********************************** -->
  <section name="PHOTOGRAMMETRY" prefix="PHOTOGRAMMETRY_">
    <!-- Camera Parameters -->
    <define name="FOCAL_LENGTH" value="24.0" unit="mm"/>
    <define name="SENSOR_WIDTH" value="6.66" unit="mm"/>		<!-- In direction of the plane's wings -->
    <define name="SENSOR_HEIGHT" value="5.32" unit="mm"/>		<!-- In direction of the plane's nose -->
    <define name="PIXELS_WIDTH" value="1280" unit=""/>

    <!-- Photogrammetry Parameters. Can also be defined in a flightplan instead -->

    <define name="OVERLAP" value="0.3" unit="%"/>
    <define name="SIDELAP" value="0.2" unit="%"/>
    <define name="RESOLUTION" value="50" unit="mm pixel projection"/>

    <!-- Flight Safety Parameters -->
    <define name="HEIGHT_MIN" value="50" unit="m"/>
    <define name="HEIGHT_MAX" value="220" unit="m"/>
    <define name="RADIUS_MIN" value="40" unit="m"/>
  </section>

<!-- ******************************** NAV ********************************** -->
<!-- TODO: prefix="NAV_"> -->
  <section name="NAV">
    <define name="NAV_PITCH" value="0."/>
    <define name="NAV_GLIDE_PITCH_TRIM" value="0."/>
  </section>

<!-- ***************************** AGGRESIVE ******************************* -->
  <section name="AGGRESSIVE" prefix="AGR_">
    <define name="BLEND_START" value="26"/> <!-- Altitude Error to Initiate Aggressive Climb CANNOT BE ZERO!!-->
    <define name="BLEND_END" value="10"/> <!-- Altitude Error to Blend Aggressive to Regular Climb Modes  CANNOT BE ZERO!!-->
    <define name="CLIMB_THROTTLE" value="0.99"/> <!-- Gaz for Aggressive Climb -->
    <define name="CLIMB_PITCH" value="RadOfDeg(40)"/> <!-- Pitch for Aggressive Climb -->
    <define name="DESCENT_THROTTLE" value="0.6"/> <!-- Gaz for Aggressive Decent -->
    <define name="DESCENT_PITCH" value="RadOfDeg(-40)"/> <!-- Pitch for Aggressive Decent -->
    <define name="CLIMB_NAV_RATIO" value="0.8"/> <!-- Percent Navigation for Altitude Error Equal to Start Altitude -->
    <define name="DESCENT_NAV_RATIO" value="0.99"/>
  </section>

<!-- ****************************** FAILSAFE ******************************* -->
  <section name="FAILSAFE" prefix="FAILSAFE_">
    <define name="DELAY_WITHOUT_GPS" value="3" unit="s"/>
    <define name="DEFAULT_THROTTLE" value="0" unit="%"/>
    <define name="DEFAULT_ROLL" value="0.15" unit="rad"/>
    <define name="DEFAULT_PITCH" value="-0.1" unit="rad"/>
    <define name="HOME_RADIUS" value="60" unit="m"/>
  </section>

<!-- ****************************** DATALINK ******************************* -->
  <section name="DATALINK" prefix="DATALINK_">
    <define name="DEVICE_TYPE" value="PPRZ"/>
    <define name="DEVICE_ADDRESS" value="...."/>
  </section>

<!-- ******************************** SIMU ********************************* -->
  <section name="SIMU">
    <define name="YAW_RESPONSE_FACTOR" value="0.5"/> <!-- a to low of a value gives bad simulation results -->
  </section>

<!-- ******************* MODULES ********************************** -->
  <modules main_freq="60">
    <load name="infrared_adc.xml"/>
    <load name="photogrammetry_calculator.xml"/>
    <load name="digital_cam_servo.xml">
      <define name="DC_SHUTTER_DELAY" value="5"/>
      <define name="DC_AUTOSHOOT_QUARTERSEC_PERIOD" value="7."/>
      <define name="DC_AUTOSHOOT_METER_GRID" value="50."/>
    </load>
<!--
    <load name="servo_switch.xml">
      <define name="SERVO_SWITCH_ON_VALUE"  value="1100"/>
      <define name="SERVO_SWITCH_OFF_VALUE" value="1900"/>
      <define name="SERVO_SWITCH_SERVO"     value="SERVO_HATCH"/>
    </load>
-->
<!--
    <load name="sys_mon.xml"/>
-->

   <!-- <load name="airspeed_ets.xml"> -->
    <!--  <define name="SENSOR_SYNC_SEND"/> -->
      <!-- define name="USE_AIRSPEED"/ -->
   <!-- </load> -->

<!--
    <load name="adc_generic.xml">
-->
<!-- Voltage measuring sensor -->
<!--
      <configure name="ADC_CHANNEL_GENERIC1" value="ADC_3"/>
-->
<!-- RPM measuring sensor -->
<!--
      <configure name="ADC_CHANNEL_GENERIC2" value="ADC_4"/>
-->
<!-- Current measuring sensor -->
<!--
      <configure name="ADC_CHANNEL_GENERIC1" value="ADC_7"/>
    </load>
-->
  </modules>

</airframe>

